{"version":3,"sources":["../src/index.ts","../src/maily.tsx","../../../node_modules/.pnpm/@antfu+utils@0.7.10/node_modules/@antfu/utils/dist/index.mjs","../src/utils.ts","../src/meta.tsx","../src/render.ts"],"sourcesContent":["export * from './maily';\nexport * from './render';\nexport type { JSONContent } from '@tiptap/core';\n","import { Fragment, type CSSProperties } from 'react';\nimport {\n  Text,\n  Html,\n  Head,\n  Body,\n  Font,\n  Container,\n  Link,\n  Heading,\n  Hr,\n  Button,\n  Img,\n  Preview,\n  Row,\n  Column,\n  Section,\n  HtmlProps,\n} from '@react-email/components';\nimport { renderAsync as reactEmailRenderAsync } from '@react-email/render';\nimport type { JSONContent } from '@tiptap/core';\nimport { deepMerge } from '@antfu/utils';\nimport { generateKey } from './utils';\nimport type { MetaDescriptors } from './meta';\nimport { meta } from './meta';\nimport { parse } from 'node-html-parser';\nimport juice from 'juice';\n\ninterface NodeOptions {\n  parent?: JSONContent;\n  prev?: JSONContent;\n  next?: JSONContent;\n\n  payloadValue?: PayloadValue;\n}\n\nexport interface MarkType {\n  [key: string]: any;\n  type: string;\n  attrs?: Record<string, any> | undefined;\n}\n\nconst antialiased: CSSProperties = {\n  WebkitFontSmoothing: 'antialiased',\n  MozOsxFontSmoothing: 'grayscale',\n};\n\nconst allowedHeadings = ['h1', 'h2', 'h3'] as const;\ntype AllowedHeadings = (typeof allowedHeadings)[number];\n\nconst headings: Record<AllowedHeadings, CSSProperties> = {\n  h1: {\n    fontSize: '36px',\n    lineHeight: '40px',\n    fontWeight: 800,\n  },\n  h2: {\n    fontSize: '30px',\n    lineHeight: '36px',\n    fontWeight: 700,\n  },\n  h3: {\n    fontSize: '24px',\n    lineHeight: '38px',\n    fontWeight: 600,\n  },\n};\n\nconst allowedLogoSizes = ['sm', 'md', 'lg'] as const;\ntype AllowedLogoSizes = (typeof allowedLogoSizes)[number];\n\nconst logoSizes: Record<AllowedLogoSizes, string> = {\n  sm: '40px',\n  md: '48px',\n  lg: '64px',\n};\n\nexport interface ThemeOptions {\n  colors?: Partial<{\n    heading: string;\n    paragraph: string;\n    horizontal: string;\n    footer: string;\n    blockquoteBorder: string;\n    codeBackground: string;\n    codeText: string;\n    linkCardTitle: string;\n    linkCardDescription: string;\n    linkCardBadgeText: string;\n    linkCardBadgeBackground: string;\n    linkCardSubTitle: string;\n  }>;\n  fontSize?: Partial<{\n    paragraph: Partial<{\n      size: string;\n      lineHeight: string;\n    }>;\n    footer: Partial<{\n      size: string;\n      lineHeight: string;\n    }>;\n  }>;\n}\n\nexport interface MailyConfig {\n  /**\n   * The preview text is the snippet of text that is pulled into the inbox\n   * preview of an email client, usually right after the subject line.\n   *\n   * Default: `undefined`\n   */\n  preview?: string;\n  /**\n   * The theme object allows you to customize the colors and font sizes of the\n   * rendered email.\n   *\n   * Default:\n   * ```js\n   * {\n   *   colors: {\n   *     heading: '#111827',\n   *     paragraph: '#374151',\n   *     horizontal: '#EAEAEA',\n   *     footer: '#64748B',\n   *   },\n   *   fontSize: {\n   *     paragraph: '15px',\n   *     footer: {\n   *       size: '14px',\n   *       lineHeight: '24px',\n   *     },\n   *   },\n   * }\n   * ```\n   *\n   * @example\n   * ```js\n   * const maily = new Maily(content, {\n   *   theme: {\n   *     colors: {\n   *       heading: '#111827',\n   *     },\n   *     fontSize: {\n   *       footer: {\n   *         size: '14px',\n   *         lineHeight: '24px',\n   *       },\n   *     },\n   *   },\n   * });\n   * ```\n   */\n  theme?: Partial<ThemeOptions>;\n}\n\nconst DEFAULT_RENDER_OPTIONS: RenderOptions = {\n  pretty: false,\n  plainText: false,\n  noHtmlWrappingTags: false,\n};\n\nconst DEFAULT_THEME: ThemeOptions = {\n  colors: {\n    heading: '#111827',\n    paragraph: '#374151',\n    horizontal: '#EAEAEA',\n    footer: '#64748B',\n    blockquoteBorder: '#D1D5DB',\n    codeBackground: '#EFEFEF',\n    codeText: '#111827',\n    linkCardTitle: '#111827',\n    linkCardDescription: '#6B7280',\n    linkCardBadgeText: '#111827',\n    linkCardBadgeBackground: '#FEF08A',\n    linkCardSubTitle: '#6B7280',\n  },\n  fontSize: {\n    paragraph: {\n      size: '15px',\n      lineHeight: '26.25px',\n    },\n    footer: {\n      size: '14px',\n      lineHeight: '24px',\n    },\n  },\n};\n\nconst CODE_FONT_FAMILY =\n  'SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace';\nexport const DEFAULT_SECTION_BACKGROUND_COLOR = '#ffffff';\nexport const DEFAULT_SECTION_ALIGN = 'left';\nexport const DEFAULT_SECTION_BORDER_WIDTH = 1;\nexport const DEFAULT_SECTION_BORDER_COLOR = '#000000';\nexport const DEFAULT_SECTION_BORDER_STYLE = 'solid';\n\nexport const DEFAULT_SECTION_MARGIN_TOP = 0;\nexport const DEFAULT_SECTION_MARGIN_RIGHT = 0;\nexport const DEFAULT_SECTION_MARGIN_BOTTOM = 0;\nexport const DEFAULT_SECTION_MARGIN_LEFT = 0;\n\nexport const DEFAULT_SECTION_PADDING_TOP = 5;\nexport const DEFAULT_SECTION_PADDING_RIGHT = 5;\nexport const DEFAULT_SECTION_PADDING_BOTTOM = 5;\nexport const DEFAULT_SECTION_PADDING_LEFT = 5;\n\nexport const DEFAULT_COLUMNS_WIDTH = '100%';\nexport const DEFAULT_COLUMNS_GAP = 8;\n\nexport const DEFAULT_COLUMN_BACKGROUND_COLOR = 'transparent';\nexport const DEFAULT_COLUMN_BORDER_RADIUS = 0;\nexport const DEFAULT_COLUMN_BORDER_WIDTH = 0;\nexport const DEFAULT_COLUMN_BORDER_COLOR = 'transparent';\n\nexport const DEFAULT_COLUMN_PADDING_TOP = 0;\nexport const DEFAULT_COLUMN_PADDING_RIGHT = 0;\nexport const DEFAULT_COLUMN_PADDING_BOTTOM = 0;\nexport const DEFAULT_COLUMN_PADDING_LEFT = 0;\n\nexport const DEFAULT_INLINE_IMAGE_HEIGHT = 20;\nexport const DEFAULT_INLINE_IMAGE_WIDTH = 20;\n\nexport const LINK_PROTOCOL_REGEX = /https?:\\/\\//;\n\nexport const DEFAULT_META_TAGS: MetaDescriptors = [\n  {\n    name: 'viewport',\n    content: 'width=device-width',\n  },\n  {\n    httpEquiv: 'X-UA-Compatible',\n    content: 'IE=edge',\n  },\n  {\n    name: 'x-apple-disable-message-reformatting',\n  },\n  {\n    // http://www.html-5.com/metatags/format-detection-meta-tag.html\n    // It will prevent iOS from automatically detecting possible phone numbers in a block of text\n    name: 'format-detection',\n    content: 'telephone=no,address=no,email=no,date=no,url=no',\n  },\n  {\n    name: 'color-scheme',\n    content: 'light',\n  },\n  {\n    name: 'supported-color-schemes',\n    content: 'light',\n  },\n];\n\nexport const DEFAULT_HTML_PROPS: HtmlProps = {\n  lang: 'en',\n  dir: 'ltr',\n};\n\nexport const DEFAULT_BUTTON_PADDING_TOP = 10;\nexport const DEFAULT_BUTTON_PADDING_RIGHT = 32;\nexport const DEFAULT_BUTTON_PADDING_BOTTOM = 10;\nexport const DEFAULT_BUTTON_PADDING_LEFT = 32;\n\nexport interface RenderOptions {\n  /**\n   * The options object allows you to customize the output of the rendered\n   * email.\n   * - `pretty` - If `true`, the output will be formatted with indentation and\n   *  line breaks.\n   * - `plainText` - If `true`, the output will be plain text instead of HTML.\n   * This is useful for testing purposes.\n   *\n   * Default: `pretty` - `false`, `plainText` - `false`\n   */\n  pretty?: boolean;\n  plainText?: boolean;\n  /**\n   * If `true`, the output will not have any HTML wrapping tags.\n   *\n   * Default: `false`\n   */\n  noHtmlWrappingTags?: boolean;\n}\n\nexport type VariableFormatter = (options: {\n  variable: string;\n  fallback?: string;\n}) => string;\nexport type VariableValues = Map<string, string>;\nexport type LinkValues = Map<string, string>;\n\nexport type PayloadValue = Record<string, any> | boolean;\nexport type PayloadValues = Map<string, PayloadValue>;\n\nexport class Maily {\n  private readonly content: JSONContent;\n  private config: MailyConfig = {\n    theme: DEFAULT_THEME,\n  };\n\n  private variableFormatter: VariableFormatter = ({ variable, fallback }) => {\n    return fallback\n      ? `{{${variable},fallback=${fallback}}}`\n      : `{{${variable}}}`;\n  };\n\n  private shouldReplaceVariableValues = false;\n  private variableValues: VariableValues = new Map();\n  private linkValues: LinkValues = new Map();\n  private openTrackingPixel: string | undefined;\n  private payloadValues: PayloadValues = new Map();\n  private marksOrder = ['underline', 'bold', 'italic', 'textStyle', 'link'];\n  private meta: MetaDescriptors = DEFAULT_META_TAGS;\n  private htmlProps: HtmlProps = DEFAULT_HTML_PROPS;\n\n  constructor(content: JSONContent = { type: 'doc', content: [] }) {\n    this.content = content;\n  }\n\n  setPreviewText(preview?: string) {\n    this.config.preview = preview;\n  }\n\n  setTheme(theme: Partial<ThemeOptions>) {\n    this.config.theme = deepMerge(this.config.theme || DEFAULT_THEME, theme);\n  }\n\n  setVariableFormatter(formatter: VariableFormatter) {\n    this.variableFormatter = formatter;\n  }\n\n  /**\n   * `setVariableValue` will set the variable value.\n   * It will also set `shouldReplaceVariableValues` to `true`.\n   *\n   * @param variable - The variable name\n   * @param value - The variable value\n   */\n  setVariableValue(variable: string, value: string) {\n    if (!this.shouldReplaceVariableValues) {\n      this.shouldReplaceVariableValues = true;\n    }\n\n    this.variableValues.set(variable, value);\n  }\n\n  /**\n   * `setVariableValues` will set the variable values.\n   * It will also set `shouldReplaceVariableValues` to `true`.\n   *\n   * @param values - The variable values\n   *\n   * @example\n   * ```js\n   * const maily = new Maily(content);\n   * maily.setVariableValues({\n   *  name: 'John Doe',\n   *  email: 'john@doe.com',\n   * });\n   * ```\n   */\n  setVariableValues(values: Record<string, string>) {\n    if (!this.shouldReplaceVariableValues) {\n      this.shouldReplaceVariableValues = true;\n    }\n\n    Object.entries(values).forEach(([variable, value]) => {\n      this.setVariableValue(variable, value);\n    });\n  }\n\n  setLinkValue(link: string, value: string) {\n    this.linkValues.set(link, value);\n  }\n\n  setLinkValues(values: Record<string, string>) {\n    Object.entries(values).forEach(([link, value]) => {\n      this.setLinkValue(link, value);\n    });\n  }\n\n  setPayloadValue(key: string, value: PayloadValue) {\n    if (!this.shouldReplaceVariableValues) {\n      this.shouldReplaceVariableValues = true;\n    }\n\n    this.payloadValues.set(key, value);\n  }\n\n  setPayloadValues(values: Record<string, PayloadValue>) {\n    Object.entries(values).forEach(([key, value]) => {\n      this.setPayloadValue(key, value);\n    });\n  }\n\n  /**\n   * `setOpenTrackingPixel` will set the open tracking pixel.\n   *\n   * @param pixel - The open tracking pixel\n   */\n  setOpenTrackingPixel(pixel?: string) {\n    this.openTrackingPixel = pixel;\n  }\n\n  /**\n   * `setShouldReplaceVariableValues` will determine whether to replace the\n   * variable values or not. Otherwise, it will just return the formatted variable.\n   *\n   * Default: `false`\n   */\n  setShouldReplaceVariableValues(shouldReplace: boolean) {\n    this.shouldReplaceVariableValues = shouldReplace;\n  }\n\n  /**\n   * `setMetaTags` will add the meta tags.\n   *\n   * @param meta - The meta tags\n   */\n  setMetaTags(meta: MetaDescriptors) {\n    this.meta.push(...meta);\n  }\n\n  /**\n   * `setHtmlProps` will set the HTML props.\n   *\n   * @param props - The HTML props\n   */\n  setHtmlProps(props: HtmlProps) {\n    this.htmlProps = {\n      ...this.htmlProps,\n      ...props,\n    };\n  }\n\n  getAllLinks() {\n    const nodes = this.content.content || [];\n    const links = new Set<string>();\n\n    const isValidLink = (href: string) => {\n      return (\n        href &&\n        this.isValidUrl(href) &&\n        !href.startsWith('#') &&\n        !href.startsWith('mailto:') &&\n        !href.startsWith('tel:') &&\n        typeof href === 'string'\n      );\n    };\n\n    const extractLinksFromNode = (node: JSONContent) => {\n      if (node.type === 'button') {\n        const originalLink = node.attrs?.url;\n        if (isValidLink(originalLink) && originalLink) {\n          links.add(originalLink);\n        }\n      } else if (node.content) {\n        node.content.forEach((childNode) => {\n          if (childNode.marks) {\n            childNode.marks.forEach((mark) => {\n              const originalLink = mark.attrs?.href;\n              if (mark.type === 'link' && isValidLink(originalLink)) {\n                links.add(originalLink);\n              }\n            });\n          }\n          if (childNode.content) {\n            extractLinksFromNode(childNode);\n          }\n        });\n      }\n    };\n\n    nodes.forEach((childNode) => {\n      extractLinksFromNode(childNode);\n    });\n\n    return links;\n  }\n\n  private isValidUrl(href: string) {\n    try {\n      const _ = new URL(href);\n      return true;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  async render({\n    noHtmlWrappingTags,\n    ...options\n  }: RenderOptions = DEFAULT_RENDER_OPTIONS): Promise<string> {\n    const markup = this.markup({ noHtmlWrappingTags });\n\n    return reactEmailRenderAsync(markup, options);\n  }\n\n  /**\n   * `markup` will render the JSON content into React Email markup.\n   * and return the raw React Tree.\n   */\n  markup({ noHtmlWrappingTags }: Pick<RenderOptions, 'noHtmlWrappingTags'>) {\n    const nodes = this.content.content || [];\n    const jsxNodes = nodes.map((node, index) => {\n      const nodeOptions: NodeOptions = {\n        prev: nodes[index - 1],\n        next: nodes[index + 1],\n        parent: node,\n      };\n\n      const component = this.renderNode(node, nodeOptions);\n      if (!component) {\n        return null;\n      }\n\n      return <Fragment key={generateKey()}>{component}</Fragment>;\n    });\n\n    const { preview } = this.config;\n    const tags = meta(this.meta);\n    const htmlProps = this.htmlProps;\n\n    const markup = noHtmlWrappingTags ? (\n      <Fragment>\n        {preview ? (\n          <Preview id=\"__react-email-preview\">{preview}</Preview>\n        ) : null}\n        {jsxNodes}\n        {this.openTrackingPixel ? (\n          <Img\n            alt=\"\"\n            src={this.openTrackingPixel}\n            style={{\n              display: 'none',\n              width: '1px',\n              height: '1px',\n            }}\n          />\n        ) : null}\n      </Fragment>\n    ) : (\n      <Html {...htmlProps}>\n        <Head>\n          <Font\n            fallbackFontFamily=\"sans-serif\"\n            fontFamily=\"Inter\"\n            fontStyle=\"normal\"\n            fontWeight={400}\n            webFont={{\n              url: 'https://rsms.me/inter/font-files/Inter-Regular.woff2?v=3.19',\n              format: 'woff2',\n            }}\n          />\n          <style\n            dangerouslySetInnerHTML={{\n              __html: `blockquote,h1,h2,h3,img,li,ol,p,ul{margin-top:0;margin-bottom:0}@media only screen and (max-width:425px){.tab-row-full{width:100%!important}.tab-col-full{display:block!important;width:100%!important}.tab-pad{padding:0!important}}`,\n            }}\n          />\n          {tags}\n        </Head>\n        <Body\n          style={{\n            margin: 0,\n          }}\n        >\n          {preview ? (\n            <Preview id=\"__react-email-preview\">{preview}</Preview>\n          ) : null}\n          <Container\n            style={{\n              maxWidth: '600px',\n              minWidth: '300px',\n              width: '100%',\n              marginLeft: 'auto',\n              marginRight: 'auto',\n              padding: '0.5rem',\n            }}\n          >\n            {jsxNodes}\n          </Container>\n          {this.openTrackingPixel ? (\n            <Img\n              alt=\"\"\n              src={this.openTrackingPixel}\n              style={{\n                display: 'none',\n                width: '1px',\n                height: '1px',\n              }}\n            />\n          ) : null}\n        </Body>\n      </Html>\n    );\n\n    return markup;\n  }\n\n  private getMarginOverrideConditions(\n    node: JSONContent,\n    options?: NodeOptions\n  ) {\n    const { parent, prev, next } = options || {};\n\n    const isNextSpacer = next?.type === 'spacer';\n    const isPrevSpacer = prev?.type === 'spacer';\n\n    const isParentListItem = parent?.type === 'listItem';\n\n    const isLastSectionElement = parent?.type === 'section' && !next;\n    const isFirstSectionElement = parent?.type === 'section' && !prev;\n\n    const isLastColumnElement = parent?.type === 'column' && !next;\n    const isFirstColumnElement = parent?.type === 'column' && !prev;\n\n    const isFirstRepeatElement = parent?.type === 'repeat' && !prev;\n    const isLastRepeatElement = parent?.type === 'repeat' && !next;\n\n    const isFirstShowElement = parent?.type === 'show' && !prev;\n    const isLastShowElement = parent?.type === 'show' && !next;\n\n    return {\n      isNextSpacer,\n      isPrevSpacer,\n      isLastSectionElement,\n      isFirstSectionElement,\n      isParentListItem,\n      isLastColumnElement,\n      isFirstColumnElement,\n      isFirstRepeatElement,\n      isLastRepeatElement,\n      isFirstShowElement,\n      isLastShowElement,\n\n      shouldRemoveTopMargin:\n        isPrevSpacer ||\n        isFirstSectionElement ||\n        isFirstColumnElement ||\n        isFirstRepeatElement ||\n        isFirstShowElement,\n      shouldRemoveBottomMargin:\n        isNextSpacer ||\n        isLastSectionElement ||\n        isLastColumnElement ||\n        isLastRepeatElement ||\n        isLastShowElement,\n    };\n  }\n\n  // `getMappedContent` will call corresponding node type\n  // and return text content\n  private getMappedContent(\n    node: JSONContent,\n    options?: NodeOptions\n  ): JSX.Element[] {\n    const allNodes = node.content || [];\n    return allNodes\n      .map((childNode, index) => {\n        const component = this.renderNode(childNode, {\n          ...options,\n          next: allNodes[index + 1],\n          prev: allNodes[index - 1],\n        });\n        if (!component) {\n          return null;\n        }\n\n        return <Fragment key={generateKey()}>{component}</Fragment>;\n      })\n      .filter((n) => n !== null) as JSX.Element[];\n  }\n\n  // `renderNode` will call the method of the corresponding node type\n  private renderNode(\n    node: JSONContent,\n    options: NodeOptions = {}\n  ): JSX.Element | null {\n    const type = node.type || '';\n\n    if (type in this) {\n      // @ts-expect-error - `this` is not assignable to type 'never'\n      return this[type]?.(node, options) as JSX.Element;\n    }\n\n    throw new Error(`Node type \"${type}\" is not supported.`);\n  }\n\n  // `renderMark` will call the method of the corresponding mark type\n  private renderMark(node: JSONContent, options?: NodeOptions): JSX.Element {\n    // It will wrap the text with the corresponding mark type\n    const text = node?.text || <>&nbsp;</>;\n    let marks = node?.marks || [];\n    // sort the marks by uderline, bold, italic, textStyle, link\n    // so that the text will be wrapped in the correct order\n    marks.sort((a, b) => {\n      return this.marksOrder.indexOf(a.type) - this.marksOrder.indexOf(b.type);\n    });\n\n    return marks.reduce(\n      (acc, mark) => {\n        const type = mark.type;\n        if (type in this) {\n          // @ts-expect-error - `this` is not assignable to type 'never'\n          return this[type]?.(mark, acc) as JSX.Element;\n        }\n\n        throw new Error(`Mark type \"${type}\" is not supported.`);\n      },\n      <>{text}</>\n    );\n  }\n\n  private paragraph(node: JSONContent, options?: NodeOptions): JSX.Element {\n    const { attrs } = node;\n    const {\n      textAlign = 'left',\n      background = 'transparent',\n      border = 'none',\n      borderRadius = 0,\n      paddingTop = 0,\n      paddingRight = 0,\n      paddingBottom = 0,\n      paddingLeft = 0,\n      fontSize = this.config.theme?.fontSize?.paragraph?.size,\n      lineHeight = this.config.theme?.fontSize?.paragraph?.lineHeight,\n      color = this.config.theme?.colors?.paragraph,\n      display = 'block',\n    } = attrs || {};\n\n    const { isParentListItem, shouldRemoveBottomMargin } =\n      this.getMarginOverrideConditions(node, options);\n\n    const show = this.shouldShow(node, options);\n    if (!show) {\n      return <></>;\n    }\n\n    const marginBottom = isParentListItem || shouldRemoveBottomMargin ? 0 : 20;\n\n    return (\n      <Text\n        style={{\n          textAlign,\n          ...antialiased,\n          display,\n          background,\n          border,\n          borderRadius,\n          paddingTop,\n          paddingRight,\n          paddingBottom,\n          paddingLeft,\n          fontSize,\n          lineHeight,\n          color,\n          margin: `0 0 ${marginBottom}px 0`,\n        }}\n      >\n        {node.content ? (\n          this.getMappedContent(node, {\n            ...options,\n            parent: node,\n          })\n        ) : (\n          <>&nbsp;</>\n        )}\n      </Text>\n    );\n  }\n\n  private text(node: JSONContent, options?: NodeOptions): JSX.Element {\n    if (node.marks) {\n      return this.renderMark(node, options);\n    }\n\n    const text = node.text;\n    // if it's all empty, return an invisible space length\n    // of the text so that it doesn't look empty for inline-images\n    const spaces = text?.match(/\\s/g);\n    if (spaces && spaces.length === text?.length) {\n      return (\n        <>\n          {spaces.map((_, index) => (\n            <Fragment key={index}>&nbsp;</Fragment>\n          ))}\n        </>\n      );\n    }\n\n    if (!text) {\n      return <>&nbsp;</>;\n    }\n\n    const shouldDangerouslySetInnerHTML =\n      node.attrs?.shouldDangerouslySetInnerHTML ?? false;\n\n    return shouldDangerouslySetInnerHTML ? (\n      <span dangerouslySetInnerHTML={{ __html: text }} />\n    ) : (\n      <>{text}</>\n    );\n  }\n\n  private bold(_: MarkType, text: JSX.Element): JSX.Element {\n    return <strong>{text}</strong>;\n  }\n\n  private italic(_: MarkType, text: JSX.Element): JSX.Element {\n    return <em>{text}</em>;\n  }\n\n  private underline(_: MarkType, text: JSX.Element): JSX.Element {\n    return <u>{text}</u>;\n  }\n\n  private strike(_: MarkType, text: JSX.Element): JSX.Element {\n    return <s style={{ textDecoration: 'line-through' }}>{text}</s>;\n  }\n\n  private textStyle(mark: MarkType, text: JSX.Element): JSX.Element {\n    const { attrs } = mark;\n    const { color = this.config.theme?.colors?.paragraph } = attrs || {};\n\n    return (\n      <span\n        style={{\n          color,\n        }}\n      >\n        {text}\n      </span>\n    );\n  }\n\n  private link(\n    mark: MarkType,\n    text: JSX.Element,\n    options?: NodeOptions\n  ): JSX.Element {\n    const { attrs } = mark;\n\n    let href = attrs?.href || '#';\n    const target = attrs?.target || '_blank';\n    const rel = attrs?.rel || 'noopener noreferrer nofollow';\n    const isUrlVariable = attrs?.isUrlVariable ?? false;\n\n    if (isUrlVariable) {\n      const linkWithoutProtocol = this.removeLinkProtocol(href);\n      href = this.variableUrlValue(linkWithoutProtocol, options);\n    } else {\n      href = this.linkValues.get(href) || href;\n    }\n\n    return (\n      <Link\n        href={href}\n        rel={rel}\n        style={{\n          fontWeight: 500,\n          textDecoration: 'none',\n          color: this.config.theme?.colors?.heading,\n        }}\n        target={target}\n      >\n        {text}\n      </Link>\n    );\n  }\n\n  private removeLinkProtocol(href: string) {\n    return href.replace(LINK_PROTOCOL_REGEX, '');\n  }\n\n  private variableUrlValue(href: string, options?: NodeOptions) {\n    const { payloadValue } = options || {};\n    const linkWithoutProtocol = this.removeLinkProtocol(href);\n\n    return (\n      (typeof payloadValue === 'object'\n        ? payloadValue[linkWithoutProtocol]\n        : payloadValue) ??\n      this.variableValues.get(linkWithoutProtocol) ??\n      href\n    );\n  }\n\n  private heading(node: JSONContent, options?: NodeOptions): JSX.Element {\n    const { attrs } = node;\n\n    const level = `h${Number(attrs?.level) || 1}`;\n    const alignment = attrs?.textAlign || 'left';\n    const { shouldRemoveBottomMargin } = this.getMarginOverrideConditions(\n      node,\n      options\n    );\n    const { fontSize, lineHeight, fontWeight } =\n      headings[level as AllowedHeadings];\n\n    const show = this.shouldShow(node, options);\n    if (!show) {\n      return <></>;\n    }\n\n    return (\n      <Heading\n        // @ts-expect-error - `this` is not assignable to type 'never'\n        as={level}\n        style={{\n          textAlign: alignment,\n          color: this.config.theme?.colors?.heading,\n          fontSize,\n          lineHeight,\n          fontWeight,\n        }}\n        mb={shouldRemoveBottomMargin ? 0 : 12}\n        mt={0}\n        mx={0}\n      >\n        {this.getMappedContent(node, {\n          ...options,\n          parent: node,\n        })}\n      </Heading>\n    );\n  }\n\n  private variable(node: JSONContent, options?: NodeOptions): JSX.Element {\n    const { payloadValue } = options || {};\n    const { id: variable, fallback } = node.attrs || {};\n\n    const shouldShow = this.shouldShow(node, options);\n    if (!shouldShow || !variable) {\n      return <></>;\n    }\n\n    const formattedVariable = this.getVariableValue(\n      variable,\n      fallback,\n      options\n    );\n\n    if (node?.marks) {\n      return this.renderMark(\n        {\n          text: formattedVariable,\n          marks: node.marks,\n        },\n        options\n      );\n    }\n\n    return <>{formattedVariable}</>;\n  }\n\n  private getVariableValue(\n    variable: string,\n    fallback?: string,\n    options?: NodeOptions\n  ) {\n    const { payloadValue } = options || {};\n\n    let formattedVariable = this.variableFormatter({\n      variable,\n      fallback,\n    });\n\n    // If `shouldReplaceVariableValues` is true, replace the variable values\n    // Otherwise, just return the formatted variable\n    if (this.shouldReplaceVariableValues) {\n      formattedVariable =\n        (typeof payloadValue === 'object'\n          ? payloadValue[variable]\n          : payloadValue) ??\n        this.variableValues.get(variable) ??\n        fallback ??\n        formattedVariable;\n    }\n\n    return formattedVariable;\n  }\n\n  private horizontalRule(node: JSONContent, __?: NodeOptions): JSX.Element {\n    const DEFAULT_MARGIN_Y = 32;\n    const { attrs } = node;\n    const {\n      marginTop = DEFAULT_MARGIN_Y,\n      marginRight = 0,\n      marginBottom = DEFAULT_MARGIN_Y,\n      marginLeft = 0,\n\n      paddingTop = 0,\n      paddingRight = 0,\n      paddingBottom = 0,\n      paddingLeft = 0,\n    } = attrs || {};\n\n    return (\n      <Hr\n        style={{\n          marginTop,\n          marginRight,\n          marginBottom,\n          marginLeft,\n          paddingTop,\n          paddingRight,\n          paddingBottom,\n          paddingLeft,\n        }}\n      />\n    );\n  }\n\n  private orderedList(node: JSONContent, options?: NodeOptions): JSX.Element {\n    const { shouldRemoveBottomMargin } = this.getMarginOverrideConditions(\n      node,\n      options\n    );\n\n    return (\n      <Container>\n        <ol\n          style={{\n            marginTop: '0px',\n            marginBottom: shouldRemoveBottomMargin ? '0' : '20px',\n            paddingLeft: '26px',\n            listStyleType: 'decimal',\n          }}\n        >\n          {this.getMappedContent(node, {\n            ...options,\n            parent: node,\n          })}\n        </ol>\n      </Container>\n    );\n  }\n\n  private bulletList(node: JSONContent, options?: NodeOptions): JSX.Element {\n    const { parent, next } = options || {};\n    const { shouldRemoveBottomMargin } = this.getMarginOverrideConditions(\n      node,\n      {\n        parent,\n        next,\n      }\n    );\n\n    return (\n      <Container\n        style={{\n          maxWidth: '100%',\n        }}\n      >\n        <ul\n          style={{\n            marginTop: '0px',\n            marginBottom: shouldRemoveBottomMargin ? '0' : '20px',\n            paddingLeft: '26px',\n            listStyleType: 'disc',\n          }}\n        >\n          {this.getMappedContent(node, {\n            ...options,\n            parent: node,\n          })}\n        </ul>\n      </Container>\n    );\n  }\n\n  private listItem(node: JSONContent, options?: NodeOptions): JSX.Element {\n    return (\n      <li\n        style={{\n          marginBottom: '8px',\n          paddingLeft: '6px',\n          ...antialiased,\n        }}\n      >\n        {this.getMappedContent(node, { ...options, parent: node })}\n      </li>\n    );\n  }\n\n  private button(node: JSONContent, options?: NodeOptions): JSX.Element {\n    const { attrs } = node;\n    let {\n      text: _text,\n      isTextVariable,\n      url,\n      isUrlVariable,\n      variant,\n      buttonColor,\n      textColor,\n      borderRadius,\n      // @TODO: Update the attribute to `textAlign`\n      alignment = 'left',\n\n      paddingTop = DEFAULT_BUTTON_PADDING_TOP,\n      paddingRight = DEFAULT_BUTTON_PADDING_RIGHT,\n      paddingBottom = DEFAULT_BUTTON_PADDING_BOTTOM,\n      paddingLeft = DEFAULT_BUTTON_PADDING_LEFT,\n      width,\n    } = attrs || {};\n\n    const shouldShow = this.shouldShow(node, options);\n    if (!shouldShow) {\n      return <></>;\n    }\n\n    let radius: string | undefined = '0px';\n    if (borderRadius === 'round') {\n      radius = '9999px';\n    } else if (borderRadius === 'smooth') {\n      radius = '6px';\n    }\n\n    const { shouldRemoveBottomMargin } = this.getMarginOverrideConditions(\n      node,\n      options\n    );\n\n    const href = isUrlVariable\n      ? this.variableUrlValue(url, options)\n      : this.linkValues.get(url) || url;\n    const text = isTextVariable ? this.variableUrlValue(_text, options) : _text;\n\n    paddingTop += 2;\n    paddingBottom += 2;\n\n    return (\n      <Container\n        style={{\n          textAlign: alignment,\n          maxWidth: '100%',\n          marginBottom: shouldRemoveBottomMargin ? '0px' : '20px',\n        }}\n      >\n        <Button\n          href={href}\n          style={{\n            color: String(textColor),\n            backgroundColor:\n              variant === 'filled' ? String(buttonColor) : 'transparent',\n            borderColor: String(buttonColor),\n            borderWidth: '2px',\n            borderStyle: 'solid',\n            textDecoration: 'none',\n            boxSizing: 'border-box',\n            fontSize: '14px',\n            fontWeight: 500,\n            borderRadius: radius,\n            padding: `${paddingTop}px ${paddingRight}px ${paddingBottom}px ${paddingLeft}px`,\n            width,\n          }}\n        >\n          {text}\n        </Button>\n      </Container>\n    );\n  }\n\n  private spacer(node: JSONContent, options?: NodeOptions): JSX.Element {\n    const { attrs } = node;\n    const { height } = attrs || {};\n\n    const shouldShow = this.shouldShow(node, options);\n    if (!shouldShow) {\n      return <></>;\n    }\n\n    return (\n      <Container\n        style={{\n          height: `${height}px`,\n        }}\n      />\n    );\n  }\n\n  private hardBreak(_: JSONContent, __?: NodeOptions): JSX.Element {\n    return <br />;\n  }\n\n  private logo(node: JSONContent, options?: NodeOptions): JSX.Element {\n    const { attrs } = node;\n    let {\n      src,\n      isSrcVariable,\n      alt,\n      title,\n      size,\n      // @TODO: Update the attribute to `textAlign`\n      alignment = 'left',\n    } = attrs || {};\n\n    const shouldShow = this.shouldShow(node, options);\n    if (!shouldShow) {\n      return <></>;\n    }\n\n    src = isSrcVariable ? this.variableUrlValue(src, options) : src;\n\n    const { shouldRemoveBottomMargin } = this.getMarginOverrideConditions(\n      node,\n      options\n    );\n\n    return (\n      <Row\n        style={{\n          marginTop: '0px',\n          marginBottom: shouldRemoveBottomMargin ? '0px' : '32px',\n        }}\n      >\n        <Column align={alignment}>\n          <Img\n            alt={alt || title || 'Logo'}\n            src={src}\n            style={{\n              width: logoSizes[size as AllowedLogoSizes] || size,\n              height: logoSizes[size as AllowedLogoSizes] || size,\n            }}\n            title={title || alt || 'Logo'}\n          />\n        </Column>\n      </Row>\n    );\n  }\n\n  private image(node: JSONContent, options?: NodeOptions): JSX.Element {\n    const { attrs } = node;\n    let {\n      src,\n      isSrcVariable,\n      alt,\n      title,\n      width = 'auto',\n      height = 'auto',\n      alignment = 'center',\n      externalLink = '',\n      isExternalLinkVariable,\n      borderRadius = 0,\n    } = attrs || {};\n\n    const shouldShow = this.shouldShow(node, options);\n    if (!shouldShow) {\n      return <></>;\n    }\n\n    const { shouldRemoveBottomMargin } = this.getMarginOverrideConditions(\n      node,\n      options\n    );\n\n    src = isSrcVariable ? this.variableUrlValue(src, options) : src;\n    externalLink = isExternalLinkVariable\n      ? this.variableUrlValue(externalLink, options)\n      : externalLink;\n\n    // Handle width value\n    const imageWidth = width === 'auto' ? 'auto' : Number(width);\n    const widthStyle = imageWidth === 'auto' ? 'auto' : `${imageWidth}px`;\n\n    // Handle height value\n    const imageHeight = height === 'auto' ? 'auto' : Number(height);\n    const heightStyle = imageHeight === 'auto' ? 'auto' : `${imageHeight}px`;\n\n    const mainImage = (\n      <Img\n        alt={alt || title || 'Image'}\n        src={src}\n        style={{\n          width: widthStyle, // Use the calculated width\n          height: heightStyle, // Use the calculated height\n          maxWidth: '100%', // Ensure image doesn't overflow container\n          outline: 'none',\n          border: 'none',\n          textDecoration: 'none',\n          display: 'block', // Prevent unwanted spacing\n          borderRadius,\n        }}\n        title={title || alt || 'Image'}\n      />\n    );\n\n    return (\n      <Row\n        style={{\n          marginTop: '0px',\n          marginBottom: shouldRemoveBottomMargin ? '0px' : '32px',\n        }}\n      >\n        <Column align={alignment}>\n          {externalLink ? (\n            <a\n              href={externalLink}\n              rel=\"noopener noreferrer\"\n              style={{\n                display: 'block',\n                maxWidth: '100%',\n                textDecoration: 'none',\n              }}\n              target=\"_blank\"\n            >\n              {mainImage}\n            </a>\n          ) : (\n            mainImage\n          )}\n        </Column>\n      </Row>\n    );\n  }\n\n  private footer(node: JSONContent, options?: NodeOptions): JSX.Element {\n    const { attrs } = node;\n    const { textAlign = 'left' } = attrs || {};\n\n    const { shouldRemoveBottomMargin } = this.getMarginOverrideConditions(\n      node,\n      options\n    );\n\n    return (\n      <Text\n        style={{\n          fontSize: this.config.theme?.fontSize?.footer?.size,\n          lineHeight: this.config.theme?.fontSize?.footer?.lineHeight,\n          color: this.config.theme?.colors?.footer,\n          marginTop: '0px',\n          marginBottom: shouldRemoveBottomMargin ? '0px' : '20px',\n          textAlign,\n          ...antialiased,\n        }}\n      >\n        {this.getMappedContent(node, {\n          ...options,\n          parent: node,\n        })}\n      </Text>\n    );\n  }\n\n  private blockquote(node: JSONContent, options?: NodeOptions): JSX.Element {\n    const { isPrevSpacer, shouldRemoveBottomMargin } =\n      this.getMarginOverrideConditions(node, options);\n\n    return (\n      <blockquote\n        style={{\n          borderLeftWidth: '4px',\n          borderLeftStyle: 'solid',\n          borderLeftColor: this.config.theme?.colors?.blockquoteBorder,\n          paddingLeft: '16px',\n          marginLeft: '0px',\n          marginRight: '0px',\n          marginTop: isPrevSpacer ? '0px' : '20px',\n          marginBottom: shouldRemoveBottomMargin ? '0px' : '20px',\n        }}\n      >\n        {this.getMappedContent(node, {\n          ...options,\n          parent: node,\n        })}\n      </blockquote>\n    );\n  }\n  private code(_: MarkType, text: JSX.Element): JSX.Element {\n    return (\n      <code\n        style={{\n          backgroundColor: this.config.theme?.colors?.codeBackground,\n          color: this.config.theme?.colors?.codeText,\n          padding: '2px 4px',\n          borderRadius: '6px',\n          fontFamily: CODE_FONT_FAMILY,\n          fontWeight: 400,\n          letterSpacing: 0,\n        }}\n      >\n        {text}\n      </code>\n    );\n  }\n  private linkCard(node: JSONContent, options?: NodeOptions): JSX.Element {\n    const { attrs } = node;\n    const { shouldRemoveBottomMargin } = this.getMarginOverrideConditions(\n      node,\n      options\n    );\n\n    const { title, description, link, linkTitle, image, badgeText, subTitle } =\n      attrs || {};\n    const href =\n      this.linkValues.get(link) || this.variableValues.get(link) || link || '#';\n\n    return (\n      <a\n        href={href}\n        rel=\"noopener noreferrer\"\n        style={{\n          border: '1px solid #eaeaea',\n          borderRadius: '10px',\n          textDecoration: 'none',\n          color: 'inherit',\n          display: 'block',\n          marginBottom: shouldRemoveBottomMargin ? '0px' : '20px',\n        }}\n        target=\"_blank\"\n      >\n        {image ? (\n          <Row\n            style={{\n              marginBottom: '6px',\n            }}\n          >\n            <Column\n              style={{\n                width: '100%',\n                height: '100%',\n              }}\n            >\n              <Img\n                alt={title || 'Link Card'}\n                src={image}\n                style={{\n                  borderRadius: '10px 10px 0 0',\n                  width: '100%',\n                  height: '100%',\n                  objectFit: 'cover',\n                }}\n                title={title || 'Link Card'}\n              />\n            </Column>\n          </Row>\n        ) : null}\n\n        <Row\n          style={{\n            padding: '15px',\n            marginTop: 0,\n            marginBottom: 0,\n          }}\n        >\n          <Column\n            style={{\n              verticalAlign: 'top',\n            }}\n          >\n            <Row\n              align={undefined}\n              style={{\n                marginBottom: '8px',\n                marginTop: '0px',\n              }}\n              width=\"auto\"\n            >\n              <Column>\n                <Text\n                  style={{\n                    fontSize: '18px',\n                    fontWeight: 600,\n                    color: this.config.theme?.colors?.linkCardTitle,\n                    margin: '0px',\n                    ...antialiased,\n                  }}\n                >\n                  {title}\n                </Text>\n              </Column>\n              {badgeText || subTitle ? (\n                <Column\n                  style={{\n                    paddingLeft: '6px',\n                    verticalAlign: 'middle',\n                  }}\n                >\n                  {badgeText ? (\n                    <span\n                      style={{\n                        fontWeight: 600,\n                        color: this.config.theme?.colors?.linkCardBadgeText,\n                        padding: '4px 8px',\n                        borderRadius: '8px',\n                        backgroundColor:\n                          this.config.theme?.colors?.linkCardBadgeBackground,\n                        fontSize: '12px',\n                        lineHeight: '12px',\n                      }}\n                    >\n                      {badgeText}\n                    </span>\n                  ) : null}{' '}\n                  {subTitle && !badgeText ? (\n                    <span\n                      style={{\n                        fontWeight: 'normal',\n                        color: this.config.theme?.colors?.linkCardSubTitle,\n                        fontSize: '12px',\n                        lineHeight: '12px',\n                      }}\n                    >\n                      {subTitle}\n                    </span>\n                  ) : null}\n                </Column>\n              ) : null}\n            </Row>\n            <Text\n              style={{\n                fontSize: '16px',\n                color: this.config.theme?.colors?.linkCardDescription,\n                marginTop: '0px',\n                marginBottom: '0px',\n                ...antialiased,\n              }}\n            >\n              {description}{' '}\n              {linkTitle ? (\n                <a\n                  href={href}\n                  rel=\"noopener noreferrer\"\n                  style={{\n                    color: this.config.theme?.colors?.linkCardTitle,\n                    fontSize: '14px',\n                    fontWeight: 600,\n                    textDecoration: 'underline',\n                  }}\n                >\n                  {linkTitle}\n                </a>\n              ) : null}\n            </Text>\n          </Column>\n        </Row>\n      </a>\n    );\n  }\n\n  private section(node: JSONContent, options?: NodeOptions): JSX.Element {\n    const { attrs } = node;\n    const {\n      borderRadius = 0,\n      background,\n      backgroundColor = DEFAULT_SECTION_BACKGROUND_COLOR,\n\n      align = DEFAULT_SECTION_ALIGN,\n      borderWidth = DEFAULT_SECTION_BORDER_WIDTH,\n      borderColor = DEFAULT_SECTION_BORDER_COLOR,\n      borderStyle = DEFAULT_SECTION_BORDER_STYLE,\n\n      marginTop = DEFAULT_SECTION_MARGIN_TOP,\n      marginRight = DEFAULT_SECTION_MARGIN_RIGHT,\n      marginBottom = DEFAULT_SECTION_MARGIN_BOTTOM,\n      marginLeft = DEFAULT_SECTION_MARGIN_LEFT,\n\n      paddingTop = DEFAULT_SECTION_PADDING_TOP,\n      paddingRight = DEFAULT_SECTION_PADDING_RIGHT,\n      paddingBottom = DEFAULT_SECTION_PADDING_BOTTOM,\n      paddingLeft = DEFAULT_SECTION_PADDING_LEFT,\n\n      textAlign = 'initial',\n    } = attrs || {};\n\n    const shouldShow = this.shouldShow(node, options);\n    if (!shouldShow) {\n      return <></>;\n    }\n\n    return (\n      <Row\n        style={{\n          marginTop,\n          marginRight,\n          marginBottom,\n          marginLeft,\n        }}\n      >\n        <Column\n          align={align}\n          style={{\n            borderColor,\n            borderWidth,\n            borderStyle,\n\n            background,\n            backgroundColor,\n            borderRadius,\n\n            paddingTop,\n            paddingRight,\n            paddingBottom,\n            paddingLeft,\n\n            textAlign,\n          }}\n        >\n          {this.getMappedContent(node, {\n            ...options,\n            parent: node,\n          })}\n        </Column>\n      </Row>\n    );\n  }\n\n  private columns(node: JSONContent, options?: NodeOptions): JSX.Element {\n    const { attrs } = node;\n\n    const shouldShow = this.shouldShow(node, options);\n    if (!shouldShow) {\n      return <></>;\n    }\n\n    const [newNode, totalWidth] = this.adjustColumnsContent(node);\n\n    return (\n      <Row\n        width={`${totalWidth}%`}\n        style={{\n          margin: 0,\n          padding: 0,\n          width: `${totalWidth}%`,\n        }}\n        className=\"tab-row-full\"\n      >\n        {this.getMappedContent(newNode, {\n          ...options,\n          parent: newNode,\n        })}\n      </Row>\n    );\n  }\n\n  private adjustColumnsContent(node: JSONContent): [JSONContent, number] {\n    const { content = [] } = node;\n    const totalWidth = 100;\n    const columnsWithWidth = content.filter(\n      (c) => c.type === 'column' && Boolean(Number(c.attrs?.width || 0))\n    );\n    const autoWidthColumns = content.filter(\n      (c) =>\n        c.type === 'column' && (c.attrs?.width === 'auto' || !c.attrs?.width)\n    );\n\n    const totalWidthUsed = columnsWithWidth.reduce(\n      (acc, c) => acc + Number(c.attrs?.width),\n      0\n    );\n\n    const remainingWidth = totalWidth - totalWidthUsed;\n    const measuredWidth = Math.round(remainingWidth / autoWidthColumns.length);\n\n    const columnCount = content.filter((c) => c.type === 'column').length;\n    const gap = node.attrs?.gap || DEFAULT_COLUMNS_GAP;\n\n    return [\n      {\n        ...node,\n        content: content.map((c, index) => {\n          const isAutoWidthColumn =\n            c.type === 'column' &&\n            (c.attrs?.width === 'auto' || !c.attrs?.width);\n          const isFirstColumn = index === 0;\n          const isMiddleColumn = index > 0 && index < columnCount - 1;\n          const isLastColumn = index === content.length - 1;\n\n          let paddingLeft = 0;\n          let paddingRight = 0;\n\n          // For 2 columns, apply a simple gap logic\n          if (columnCount < 3) {\n            paddingLeft = isFirstColumn ? 0 : gap / 2;\n            paddingRight = isLastColumn ? 0 : gap / 2;\n          } else {\n            // For more than 2 columns, apply more gap in the first and last columns\n            // and less gap in the middle columns to make it look more balanced\n            // because the first and last columns have more space to fill\n            const leftAndRightPadding = (gap / 2) * 1.5;\n            const middleColumnPadding = leftAndRightPadding / 2;\n\n            paddingLeft = isFirstColumn\n              ? 0\n              : isMiddleColumn\n                ? middleColumnPadding\n                : leftAndRightPadding;\n            paddingRight = isLastColumn\n              ? 0\n              : isMiddleColumn\n                ? middleColumnPadding\n                : leftAndRightPadding;\n          }\n\n          paddingLeft = Math.round(paddingLeft * 100) / 100;\n          paddingRight = Math.round(paddingRight * 100) / 100;\n\n          return {\n            ...c,\n            attrs: {\n              ...c.attrs,\n              width: isAutoWidthColumn ? measuredWidth : c.attrs?.width,\n\n              isFirstColumn,\n              isLastColumn,\n              index,\n\n              paddingLeft,\n              paddingRight,\n            },\n          };\n        }),\n      },\n      autoWidthColumns.length === 0\n        ? Math.min(totalWidth, totalWidthUsed)\n        : totalWidth,\n    ];\n  }\n\n  private column(node: JSONContent, options?: NodeOptions): JSX.Element {\n    const { attrs } = node;\n    const {\n      width,\n      verticalAlign = 'top',\n      paddingLeft = 0,\n      paddingRight = 0,\n    } = attrs || {};\n\n    return (\n      <Column\n        width={`${Number(width)}%`}\n        style={{\n          width: `${Number(width)}%`,\n          margin: 0,\n          verticalAlign,\n        }}\n        className=\"tab-col-full\"\n      >\n        <Section\n          style={{\n            margin: 0,\n            paddingLeft,\n            paddingRight,\n          }}\n          className=\"tab-pad\"\n        >\n          {this.getMappedContent(node, {\n            ...options,\n            parent: node,\n          })}\n        </Section>\n      </Column>\n    );\n  }\n\n  private repeat(node: JSONContent, options?: NodeOptions): JSX.Element {\n    const { attrs } = node;\n    const { each = '', iterations = 0 } = attrs || {};\n\n    const shouldShow = this.shouldShow(node, options);\n    if (!shouldShow) {\n      return <></>;\n    }\n\n    let { payloadValue } = options || {};\n    payloadValue = typeof payloadValue === 'object' ? payloadValue : {};\n\n    const values = this.payloadValues.get(each) ?? payloadValue[each] ?? [];\n    if (!Array.isArray(values)) {\n      throw new Error(`Payload value for each \"${each}\" is not an array`);\n    }\n\n    // If iterations is 0 or not set, use all values\n    // Otherwise use the specified number of iterations\n    const repeatCount = iterations === 0 ? values.length : iterations;\n    const repeatedValues = Array.from(\n      { length: repeatCount },\n      (_, i) => values[i % values.length] || {}\n    );\n\n    return (\n      <>\n        {repeatedValues.map((value) => {\n          return (\n            <Fragment key={generateKey()}>\n              {this.getMappedContent(node, {\n                ...options,\n                parent: node,\n                payloadValue: value,\n              })}\n            </Fragment>\n          );\n        })}\n      </>\n    );\n  }\n\n  /**\n   * @deprecated\n   * This for node is an alias for the repeat node\n   * we will remove this in the future\n   * @param node\n   * @param options\n   * @returns JSX.Element\n   */\n  private for(node: JSONContent, options?: NodeOptions): JSX.Element {\n    return this.repeat(node, options);\n  }\n\n  private shouldShow(node: JSONContent, options?: NodeOptions): boolean {\n    const showIfKey = node?.attrs?.showIfKey ?? '';\n    if (!showIfKey) {\n      return true;\n    }\n\n    let { payloadValue } = options || {};\n    payloadValue = typeof payloadValue === 'object' ? payloadValue : {};\n    return !!(this.payloadValues.get(showIfKey) ?? payloadValue[showIfKey]);\n  }\n\n  htmlCodeBlock(node: JSONContent, options?: NodeOptions): JSX.Element {\n    const show = this.shouldShow(node, options);\n    if (!show) {\n      return <></>;\n    }\n\n    // the text can be a proper html code block\n    // or only the body of the html\n    // so we need to wrap it in a proper html tag\n    const text =\n      node.content?.reduce((acc, n) => {\n        if (n?.type === 'text') {\n          return acc + n?.text;\n        } else if (n?.type === 'variable') {\n          const value = this.getVariableValue(\n            n?.attrs?.id,\n            n?.attrs?.fallback,\n            options\n          );\n          return acc + value;\n        }\n\n        return acc;\n      }, '') || '';\n\n    // we will inline the css in the html\n    // so that it can be rendered properly\n    const inlineCssHtml = juice(text);\n    const doc = parse(inlineCssHtml);\n    const head = doc?.querySelector('head');\n    head?.remove();\n    const html = doc.toString();\n\n    return (\n      <table\n        align=\"left\"\n        width=\"100%\"\n        border={0}\n        cellPadding=\"0\"\n        cellSpacing=\"0\"\n        role=\"presentation\"\n      >\n        <tbody>\n          <tr style={{ width: '100%' }}>\n            <td\n              style={{ width: '100%' }}\n              dangerouslySetInnerHTML={{\n                __html: html,\n              }}\n            />\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n\n  private inlineImage(node: JSONContent, options?: NodeOptions): JSX.Element {\n    const { attrs } = node;\n    let {\n      src,\n      isSrcVariable,\n      alt = '',\n      title = '',\n      height = DEFAULT_INLINE_IMAGE_HEIGHT,\n      width = DEFAULT_INLINE_IMAGE_WIDTH,\n      externalLink = '',\n      isExternalLinkVariable,\n    } = attrs || {};\n\n    src = isSrcVariable ? this.variableUrlValue(src, options) : src;\n    externalLink = isExternalLinkVariable\n      ? this.variableUrlValue(externalLink, options)\n      : externalLink;\n\n    const image = (\n      <img\n        src={src}\n        alt={alt}\n        title={title}\n        width={width}\n        height={height}\n        style={{\n          display: 'inline',\n          verticalAlign: 'middle',\n          width: `${width}px`,\n          height: `${height}px`,\n          outline: 'none',\n          border: 'none',\n          textDecoration: 'none',\n        }}\n      />\n    );\n\n    if (!externalLink) {\n      return image;\n    }\n\n    return (\n      <a\n        href={externalLink}\n        rel=\"noopener noreferrer\"\n        style={{\n          display: 'inline',\n          textDecoration: 'none',\n        }}\n        target=\"_blank\"\n      >\n        {image}\n      </a>\n    );\n  }\n}\n","function clamp(n, min, max) {\n  return Math.min(max, Math.max(min, n));\n}\nfunction sum(...args) {\n  return flattenArrayable(args).reduce((a, b) => a + b, 0);\n}\nfunction lerp(min, max, t) {\n  const interpolation = clamp(t, 0, 1);\n  return min + (max - min) * interpolation;\n}\nfunction remap(n, inMin, inMax, outMin, outMax) {\n  const interpolation = (n - inMin) / (inMax - inMin);\n  return lerp(outMin, outMax, interpolation);\n}\n\nfunction toArray(array) {\n  array = array ?? [];\n  return Array.isArray(array) ? array : [array];\n}\nfunction flattenArrayable(array) {\n  return toArray(array).flat(1);\n}\nfunction mergeArrayable(...args) {\n  return args.flatMap((i) => toArray(i));\n}\nfunction partition(array, ...filters) {\n  const result = Array.from({ length: filters.length + 1 }).fill(null).map(() => []);\n  array.forEach((e, idx, arr) => {\n    let i = 0;\n    for (const filter of filters) {\n      if (filter(e, idx, arr)) {\n        result[i].push(e);\n        return;\n      }\n      i += 1;\n    }\n    result[i].push(e);\n  });\n  return result;\n}\nfunction uniq(array) {\n  return Array.from(new Set(array));\n}\nfunction uniqueBy(array, equalFn) {\n  return array.reduce((acc, cur) => {\n    const index = acc.findIndex((item) => equalFn(cur, item));\n    if (index === -1)\n      acc.push(cur);\n    return acc;\n  }, []);\n}\nfunction last(array) {\n  return at(array, -1);\n}\nfunction remove(array, value) {\n  if (!array)\n    return false;\n  const index = array.indexOf(value);\n  if (index >= 0) {\n    array.splice(index, 1);\n    return true;\n  }\n  return false;\n}\nfunction at(array, index) {\n  const len = array.length;\n  if (!len)\n    return void 0;\n  if (index < 0)\n    index += len;\n  return array[index];\n}\nfunction range(...args) {\n  let start, stop, step;\n  if (args.length === 1) {\n    start = 0;\n    step = 1;\n    [stop] = args;\n  } else {\n    [start, stop, step = 1] = args;\n  }\n  const arr = [];\n  let current = start;\n  while (current < stop) {\n    arr.push(current);\n    current += step || 1;\n  }\n  return arr;\n}\nfunction move(arr, from, to) {\n  arr.splice(to, 0, arr.splice(from, 1)[0]);\n  return arr;\n}\nfunction clampArrayRange(n, arr) {\n  return clamp(n, 0, arr.length - 1);\n}\nfunction sample(arr, quantity) {\n  return Array.from({ length: quantity }, (_) => arr[Math.round(Math.random() * (arr.length - 1))]);\n}\nfunction shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\nfunction assert(condition, message) {\n  if (!condition)\n    throw new Error(message);\n}\nconst toString = (v) => Object.prototype.toString.call(v);\nfunction getTypeName(v) {\n  if (v === null)\n    return \"null\";\n  const type = toString(v).slice(8, -1).toLowerCase();\n  return typeof v === \"object\" || typeof v === \"function\" ? type : typeof v;\n}\nfunction noop() {\n}\n\nfunction isDeepEqual(value1, value2) {\n  const type1 = getTypeName(value1);\n  const type2 = getTypeName(value2);\n  if (type1 !== type2)\n    return false;\n  if (type1 === \"array\") {\n    if (value1.length !== value2.length)\n      return false;\n    return value1.every((item, i) => {\n      return isDeepEqual(item, value2[i]);\n    });\n  }\n  if (type1 === \"object\") {\n    const keyArr = Object.keys(value1);\n    if (keyArr.length !== Object.keys(value2).length)\n      return false;\n    return keyArr.every((key) => {\n      return isDeepEqual(value1[key], value2[key]);\n    });\n  }\n  return Object.is(value1, value2);\n}\n\nfunction notNullish(v) {\n  return v != null;\n}\nfunction noNull(v) {\n  return v !== null;\n}\nfunction notUndefined(v) {\n  return v !== void 0;\n}\nfunction isTruthy(v) {\n  return Boolean(v);\n}\n\nconst isDef = (val) => typeof val !== \"undefined\";\nconst isBoolean = (val) => typeof val === \"boolean\";\nconst isFunction = (val) => typeof val === \"function\";\nconst isNumber = (val) => typeof val === \"number\";\nconst isString = (val) => typeof val === \"string\";\nconst isObject = (val) => toString(val) === \"[object Object]\";\nconst isUndefined = (val) => toString(val) === \"[object Undefined]\";\nconst isNull = (val) => toString(val) === \"[object Null]\";\nconst isRegExp = (val) => toString(val) === \"[object RegExp]\";\nconst isDate = (val) => toString(val) === \"[object Date]\";\nconst isWindow = (val) => typeof window !== \"undefined\" && toString(val) === \"[object Window]\";\nconst isBrowser = typeof window !== \"undefined\";\n\nfunction slash(str) {\n  return str.replace(/\\\\/g, \"/\");\n}\nfunction ensurePrefix(prefix, str) {\n  if (!str.startsWith(prefix))\n    return prefix + str;\n  return str;\n}\nfunction ensureSuffix(suffix, str) {\n  if (!str.endsWith(suffix))\n    return str + suffix;\n  return str;\n}\nfunction template(str, ...args) {\n  const [firstArg, fallback] = args;\n  if (isObject(firstArg)) {\n    const vars = firstArg;\n    return str.replace(/{([\\w\\d]+)}/g, (_, key) => vars[key] || ((typeof fallback === \"function\" ? fallback(key) : fallback) ?? key));\n  } else {\n    return str.replace(/{(\\d+)}/g, (_, key) => {\n      const index = Number(key);\n      if (Number.isNaN(index))\n        return key;\n      return args[index];\n    });\n  }\n}\nconst urlAlphabet = \"useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict\";\nfunction randomStr(size = 16, dict = urlAlphabet) {\n  let id = \"\";\n  let i = size;\n  const len = dict.length;\n  while (i--)\n    id += dict[Math.random() * len | 0];\n  return id;\n}\nfunction capitalize(str) {\n  return str[0].toUpperCase() + str.slice(1).toLowerCase();\n}\nconst _reFullWs = /^\\s*$/;\nfunction unindent(str) {\n  const lines = (typeof str === \"string\" ? str : str[0]).split(\"\\n\");\n  const whitespaceLines = lines.map((line) => _reFullWs.test(line));\n  const commonIndent = lines.reduce((min, line, idx) => {\n    var _a;\n    if (whitespaceLines[idx])\n      return min;\n    const indent = (_a = line.match(/^\\s*/)) == null ? void 0 : _a[0].length;\n    return indent === void 0 ? min : Math.min(min, indent);\n  }, Number.POSITIVE_INFINITY);\n  let emptyLinesHead = 0;\n  while (emptyLinesHead < lines.length && whitespaceLines[emptyLinesHead])\n    emptyLinesHead++;\n  let emptyLinesTail = 0;\n  while (emptyLinesTail < lines.length && whitespaceLines[lines.length - emptyLinesTail - 1])\n    emptyLinesTail++;\n  return lines.slice(emptyLinesHead, lines.length - emptyLinesTail).map((line) => line.slice(commonIndent)).join(\"\\n\");\n}\n\nconst timestamp = () => +Date.now();\n\nfunction batchInvoke(functions) {\n  functions.forEach((fn) => fn && fn());\n}\nfunction invoke(fn) {\n  return fn();\n}\nfunction tap(value, callback) {\n  callback(value);\n  return value;\n}\n\nfunction objectMap(obj, fn) {\n  return Object.fromEntries(\n    Object.entries(obj).map(([k, v]) => fn(k, v)).filter(notNullish)\n  );\n}\nfunction isKeyOf(obj, k) {\n  return k in obj;\n}\nfunction objectKeys(obj) {\n  return Object.keys(obj);\n}\nfunction objectEntries(obj) {\n  return Object.entries(obj);\n}\nfunction deepMerge(target, ...sources) {\n  if (!sources.length)\n    return target;\n  const source = sources.shift();\n  if (source === void 0)\n    return target;\n  if (isMergableObject(target) && isMergableObject(source)) {\n    objectKeys(source).forEach((key) => {\n      if (key === \"__proto__\" || key === \"constructor\" || key === \"prototype\")\n        return;\n      if (isMergableObject(source[key])) {\n        if (!target[key])\n          target[key] = {};\n        if (isMergableObject(target[key])) {\n          deepMerge(target[key], source[key]);\n        } else {\n          target[key] = source[key];\n        }\n      } else {\n        target[key] = source[key];\n      }\n    });\n  }\n  return deepMerge(target, ...sources);\n}\nfunction deepMergeWithArray(target, ...sources) {\n  if (!sources.length)\n    return target;\n  const source = sources.shift();\n  if (source === void 0)\n    return target;\n  if (Array.isArray(target) && Array.isArray(source))\n    target.push(...source);\n  if (isMergableObject(target) && isMergableObject(source)) {\n    objectKeys(source).forEach((key) => {\n      if (key === \"__proto__\" || key === \"constructor\" || key === \"prototype\")\n        return;\n      if (Array.isArray(source[key])) {\n        if (!target[key])\n          target[key] = [];\n        deepMergeWithArray(target[key], source[key]);\n      } else if (isMergableObject(source[key])) {\n        if (!target[key])\n          target[key] = {};\n        deepMergeWithArray(target[key], source[key]);\n      } else {\n        target[key] = source[key];\n      }\n    });\n  }\n  return deepMergeWithArray(target, ...sources);\n}\nfunction isMergableObject(item) {\n  return isObject(item) && !Array.isArray(item);\n}\nfunction objectPick(obj, keys, omitUndefined = false) {\n  return keys.reduce((n, k) => {\n    if (k in obj) {\n      if (!omitUndefined || obj[k] !== void 0)\n        n[k] = obj[k];\n    }\n    return n;\n  }, {});\n}\nfunction clearUndefined(obj) {\n  Object.keys(obj).forEach((key) => obj[key] === void 0 ? delete obj[key] : {});\n  return obj;\n}\nfunction hasOwnProperty(obj, v) {\n  if (obj == null)\n    return false;\n  return Object.prototype.hasOwnProperty.call(obj, v);\n}\n\nfunction createSingletonPromise(fn) {\n  let _promise;\n  function wrapper() {\n    if (!_promise)\n      _promise = fn();\n    return _promise;\n  }\n  wrapper.reset = async () => {\n    const _prev = _promise;\n    _promise = void 0;\n    if (_prev)\n      await _prev;\n  };\n  return wrapper;\n}\nfunction sleep(ms, callback) {\n  return new Promise(\n    (resolve) => setTimeout(async () => {\n      await (callback == null ? void 0 : callback());\n      resolve();\n    }, ms)\n  );\n}\nfunction createPromiseLock() {\n  const locks = [];\n  return {\n    async run(fn) {\n      const p = fn();\n      locks.push(p);\n      try {\n        return await p;\n      } finally {\n        remove(locks, p);\n      }\n    },\n    async wait() {\n      await Promise.allSettled(locks);\n    },\n    isWaiting() {\n      return Boolean(locks.length);\n    },\n    clear() {\n      locks.length = 0;\n    }\n  };\n}\nfunction createControlledPromise() {\n  let resolve, reject;\n  const promise = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  promise.resolve = resolve;\n  promise.reject = reject;\n  return promise;\n}\n\n/* eslint-disable no-undefined,no-param-reassign,no-shadow */\n\n/**\n * Throttle execution of a function. Especially useful for rate limiting\n * execution of handlers on events like resize and scroll.\n *\n * @param {number} delay -                  A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher)\n *                                            are most useful.\n * @param {Function} callback -               A function to be executed after delay milliseconds. The `this` context and all arguments are passed through,\n *                                            as-is, to `callback` when the throttled-function is executed.\n * @param {object} [options] -              An object to configure options.\n * @param {boolean} [options.noTrailing] -   Optional, defaults to false. If noTrailing is true, callback will only execute every `delay` milliseconds\n *                                            while the throttled-function is being called. If noTrailing is false or unspecified, callback will be executed\n *                                            one final time after the last throttled-function call. (After the throttled-function has not been called for\n *                                            `delay` milliseconds, the internal counter is reset).\n * @param {boolean} [options.noLeading] -   Optional, defaults to false. If noLeading is false, the first throttled-function call will execute callback\n *                                            immediately. If noLeading is true, the first the callback execution will be skipped. It should be noted that\n *                                            callback will never executed if both noLeading = true and noTrailing = true.\n * @param {boolean} [options.debounceMode] - If `debounceMode` is true (at begin), schedule `clear` to execute after `delay` ms. If `debounceMode` is\n *                                            false (at end), schedule `callback` to execute after `delay` ms.\n *\n * @returns {Function} A new, throttled, function.\n */\nfunction throttle (delay, callback, options) {\n  var _ref = options || {},\n      _ref$noTrailing = _ref.noTrailing,\n      noTrailing = _ref$noTrailing === void 0 ? false : _ref$noTrailing,\n      _ref$noLeading = _ref.noLeading,\n      noLeading = _ref$noLeading === void 0 ? false : _ref$noLeading,\n      _ref$debounceMode = _ref.debounceMode,\n      debounceMode = _ref$debounceMode === void 0 ? undefined : _ref$debounceMode;\n  /*\n   * After wrapper has stopped being called, this timeout ensures that\n   * `callback` is executed at the proper times in `throttle` and `end`\n   * debounce modes.\n   */\n\n\n  var timeoutID;\n  var cancelled = false; // Keep track of the last time `callback` was executed.\n\n  var lastExec = 0; // Function to clear existing timeout\n\n  function clearExistingTimeout() {\n    if (timeoutID) {\n      clearTimeout(timeoutID);\n    }\n  } // Function to cancel next exec\n\n\n  function cancel(options) {\n    var _ref2 = options || {},\n        _ref2$upcomingOnly = _ref2.upcomingOnly,\n        upcomingOnly = _ref2$upcomingOnly === void 0 ? false : _ref2$upcomingOnly;\n\n    clearExistingTimeout();\n    cancelled = !upcomingOnly;\n  }\n  /*\n   * The `wrapper` function encapsulates all of the throttling / debouncing\n   * functionality and when executed will limit the rate at which `callback`\n   * is executed.\n   */\n\n\n  function wrapper() {\n    for (var _len = arguments.length, arguments_ = new Array(_len), _key = 0; _key < _len; _key++) {\n      arguments_[_key] = arguments[_key];\n    }\n\n    var self = this;\n    var elapsed = Date.now() - lastExec;\n\n    if (cancelled) {\n      return;\n    } // Execute `callback` and update the `lastExec` timestamp.\n\n\n    function exec() {\n      lastExec = Date.now();\n      callback.apply(self, arguments_);\n    }\n    /*\n     * If `debounceMode` is true (at begin) this is used to clear the flag\n     * to allow future `callback` executions.\n     */\n\n\n    function clear() {\n      timeoutID = undefined;\n    }\n\n    if (!noLeading && debounceMode && !timeoutID) {\n      /*\n       * Since `wrapper` is being called for the first time and\n       * `debounceMode` is true (at begin), execute `callback`\n       * and noLeading != true.\n       */\n      exec();\n    }\n\n    clearExistingTimeout();\n\n    if (debounceMode === undefined && elapsed > delay) {\n      if (noLeading) {\n        /*\n         * In throttle mode with noLeading, if `delay` time has\n         * been exceeded, update `lastExec` and schedule `callback`\n         * to execute after `delay` ms.\n         */\n        lastExec = Date.now();\n\n        if (!noTrailing) {\n          timeoutID = setTimeout(debounceMode ? clear : exec, delay);\n        }\n      } else {\n        /*\n         * In throttle mode without noLeading, if `delay` time has been exceeded, execute\n         * `callback`.\n         */\n        exec();\n      }\n    } else if (noTrailing !== true) {\n      /*\n       * In trailing throttle mode, since `delay` time has not been\n       * exceeded, schedule `callback` to execute `delay` ms after most\n       * recent execution.\n       *\n       * If `debounceMode` is true (at begin), schedule `clear` to execute\n       * after `delay` ms.\n       *\n       * If `debounceMode` is false (at end), schedule `callback` to\n       * execute after `delay` ms.\n       */\n      timeoutID = setTimeout(debounceMode ? clear : exec, debounceMode === undefined ? delay - elapsed : delay);\n    }\n  }\n\n  wrapper.cancel = cancel; // Return the wrapper function.\n\n  return wrapper;\n}\n\n/* eslint-disable no-undefined */\n/**\n * Debounce execution of a function. Debouncing, unlike throttling,\n * guarantees that a function is only executed a single time, either at the\n * very beginning of a series of calls, or at the very end.\n *\n * @param {number} delay -               A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.\n * @param {Function} callback -          A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,\n *                                        to `callback` when the debounced-function is executed.\n * @param {object} [options] -           An object to configure options.\n * @param {boolean} [options.atBegin] -  Optional, defaults to false. If atBegin is false or unspecified, callback will only be executed `delay` milliseconds\n *                                        after the last debounced-function call. If atBegin is true, callback will be executed only at the first debounced-function call.\n *                                        (After the throttled-function has not been called for `delay` milliseconds, the internal counter is reset).\n *\n * @returns {Function} A new, debounced function.\n */\n\nfunction debounce (delay, callback, options) {\n  var _ref = options || {},\n      _ref$atBegin = _ref.atBegin,\n      atBegin = _ref$atBegin === void 0 ? false : _ref$atBegin;\n\n  return throttle(delay, callback, {\n    debounceMode: atBegin !== false\n  });\n}\n\n/*\nHow it works:\n`this.#head` is an instance of `Node` which keeps track of its current value and nests another instance of `Node` that keeps the value that comes after it. When a value is provided to `.enqueue()`, the code needs to iterate through `this.#head`, going deeper and deeper to find the last value. However, iterating through every single item is slow. This problem is solved by saving a reference to the last value as `this.#tail` so that it can reference it to add a new value.\n*/\n\nclass Node {\n\tvalue;\n\tnext;\n\n\tconstructor(value) {\n\t\tthis.value = value;\n\t}\n}\n\nclass Queue {\n\t#head;\n\t#tail;\n\t#size;\n\n\tconstructor() {\n\t\tthis.clear();\n\t}\n\n\tenqueue(value) {\n\t\tconst node = new Node(value);\n\n\t\tif (this.#head) {\n\t\t\tthis.#tail.next = node;\n\t\t\tthis.#tail = node;\n\t\t} else {\n\t\t\tthis.#head = node;\n\t\t\tthis.#tail = node;\n\t\t}\n\n\t\tthis.#size++;\n\t}\n\n\tdequeue() {\n\t\tconst current = this.#head;\n\t\tif (!current) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#head = this.#head.next;\n\t\tthis.#size--;\n\t\treturn current.value;\n\t}\n\n\tclear() {\n\t\tthis.#head = undefined;\n\t\tthis.#tail = undefined;\n\t\tthis.#size = 0;\n\t}\n\n\tget size() {\n\t\treturn this.#size;\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tlet current = this.#head;\n\n\t\twhile (current) {\n\t\t\tyield current.value;\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n}\n\nconst AsyncResource = {\n\tbind(fn, _type, thisArg) {\n\t\treturn fn.bind(thisArg);\n\t},\n};\n\nfunction pLimit(concurrency) {\n\tif (!((Number.isInteger(concurrency) || concurrency === Number.POSITIVE_INFINITY) && concurrency > 0)) {\n\t\tthrow new TypeError('Expected `concurrency` to be a number from 1 and up');\n\t}\n\n\tconst queue = new Queue();\n\tlet activeCount = 0;\n\n\tconst next = () => {\n\t\tactiveCount--;\n\n\t\tif (queue.size > 0) {\n\t\t\tqueue.dequeue()();\n\t\t}\n\t};\n\n\tconst run = async (function_, resolve, arguments_) => {\n\t\tactiveCount++;\n\n\t\tconst result = (async () => function_(...arguments_))();\n\n\t\tresolve(result);\n\n\t\ttry {\n\t\t\tawait result;\n\t\t} catch {}\n\n\t\tnext();\n\t};\n\n\tconst enqueue = (function_, resolve, arguments_) => {\n\t\tqueue.enqueue(\n\t\t\tAsyncResource.bind(run.bind(undefined, function_, resolve, arguments_)),\n\t\t);\n\n\t\t(async () => {\n\t\t\t// This function needs to wait until the next microtask before comparing\n\t\t\t// `activeCount` to `concurrency`, because `activeCount` is updated asynchronously\n\t\t\t// when the run function is dequeued and called. The comparison in the if-statement\n\t\t\t// needs to happen asynchronously as well to get an up-to-date value for `activeCount`.\n\t\t\tawait Promise.resolve();\n\n\t\t\tif (activeCount < concurrency && queue.size > 0) {\n\t\t\t\tqueue.dequeue()();\n\t\t\t}\n\t\t})();\n\t};\n\n\tconst generator = (function_, ...arguments_) => new Promise(resolve => {\n\t\tenqueue(function_, resolve, arguments_);\n\t});\n\n\tObject.defineProperties(generator, {\n\t\tactiveCount: {\n\t\t\tget: () => activeCount,\n\t\t},\n\t\tpendingCount: {\n\t\t\tget: () => queue.size,\n\t\t},\n\t\tclearQueue: {\n\t\t\tvalue() {\n\t\t\t\tqueue.clear();\n\t\t\t},\n\t\t},\n\t});\n\n\treturn generator;\n}\n\nconst VOID = Symbol(\"p-void\");\nclass PInstance extends Promise {\n  constructor(items = [], options) {\n    super(() => {\n    });\n    this.items = items;\n    this.options = options;\n    this.promises = /* @__PURE__ */ new Set();\n  }\n  get promise() {\n    var _a;\n    let batch;\n    const items = [...Array.from(this.items), ...Array.from(this.promises)];\n    if ((_a = this.options) == null ? void 0 : _a.concurrency) {\n      const limit = pLimit(this.options.concurrency);\n      batch = Promise.all(items.map((p2) => limit(() => p2)));\n    } else {\n      batch = Promise.all(items);\n    }\n    return batch.then((l) => l.filter((i) => i !== VOID));\n  }\n  add(...args) {\n    args.forEach((i) => {\n      this.promises.add(i);\n    });\n  }\n  map(fn) {\n    return new PInstance(\n      Array.from(this.items).map(async (i, idx) => {\n        const v = await i;\n        if (v === VOID)\n          return VOID;\n        return fn(v, idx);\n      }),\n      this.options\n    );\n  }\n  filter(fn) {\n    return new PInstance(\n      Array.from(this.items).map(async (i, idx) => {\n        const v = await i;\n        const r = await fn(v, idx);\n        if (!r)\n          return VOID;\n        return v;\n      }),\n      this.options\n    );\n  }\n  forEach(fn) {\n    return this.map(fn).then();\n  }\n  reduce(fn, initialValue) {\n    return this.promise.then((array) => array.reduce(fn, initialValue));\n  }\n  clear() {\n    this.promises.clear();\n  }\n  then(fn) {\n    const p2 = this.promise;\n    if (fn)\n      return p2.then(fn);\n    else\n      return p2;\n  }\n  catch(fn) {\n    return this.promise.catch(fn);\n  }\n  finally(fn) {\n    return this.promise.finally(fn);\n  }\n}\nfunction p(items, options) {\n  return new PInstance(items, options);\n}\n\nexport { assert, at, batchInvoke, capitalize, clamp, clampArrayRange, clearUndefined, createControlledPromise, createPromiseLock, createSingletonPromise, debounce, deepMerge, deepMergeWithArray, ensurePrefix, ensureSuffix, flattenArrayable, getTypeName, hasOwnProperty, invoke, isBoolean, isBrowser, isDate, isDeepEqual, isDef, isFunction, isKeyOf, isNull, isNumber, isObject, isRegExp, isString, isTruthy, isUndefined, isWindow, last, lerp, mergeArrayable, move, noNull, noop, notNullish, notUndefined, objectEntries, objectKeys, objectMap, objectPick, p, partition, randomStr, range, remap, remove, sample, shuffle, slash, sleep, sum, tap, template, throttle, timestamp, toArray, toString, unindent, uniq, uniqueBy };\n","export function generateKey() {\n  // Length of 6 is enough to avoid collisions\n  // for react keys\n  return Math.random().toString(36).substr(2, 6);\n}\n","import { createElement } from 'react';\n\nexport type MetaDescriptor =\n  | {\n      charSet: 'utf-8';\n    }\n  | {\n      title: string;\n    }\n  | {\n      name: string;\n      content: string;\n    }\n  | {\n      property: string;\n      content: string;\n    }\n  | {\n      httpEquiv: string;\n      content: string;\n    }\n  | {\n      tagName: 'meta' | 'link';\n      [attribute: string]: string;\n    }\n  | {\n      [name: string]: string;\n    };\n\nexport type MetaDescriptors = MetaDescriptor[];\n\nexport function meta(meta: MetaDescriptors) {\n  return (\n    meta\n      // only filter unique meta tags\n      // so that we don't have duplicate meta tags\n      .filter((meta, index, self) => {\n        const meta_hash = has(meta);\n        return (\n          index ===\n          self.findIndex((t) => {\n            return has(t) === meta_hash;\n          })\n        );\n      })\n      .map(process)\n      .filter(Boolean) as JSX.Element[]\n  );\n}\n\nfunction process(props: MetaDescriptor) {\n  if ('tagName' in props) {\n    const { tagName, ...attributes } = props;\n    const Comp = tagName;\n    return <Comp key={JSON.stringify(attributes)} {...attributes} />;\n  }\n\n  if ('title' in props) {\n    return <title>{props.title}</title>;\n  }\n\n  if ('charSet' in props) {\n    return <meta charSet={props.charSet} />;\n  }\n\n  return <meta key={JSON.stringify(props)} {...props} />;\n}\n\n/**\n * hash the meta object to string\n * so that we can filter out duplicates\n * for that we have to sort the object keys\n * and then stringify it and hash it\n */\nfunction has(meta: MetaDescriptor) {\n  const sortedMeta = Object.keys(meta)\n    .sort()\n    .reduce((acc, key) => {\n      const _key = key as keyof MetaDescriptor;\n      acc[_key] = meta[_key];\n      return acc;\n    }, {} as MetaDescriptor);\n\n  return JSON.stringify(sortedMeta);\n}\n","import type { JSONContent } from '@tiptap/core';\nimport { Maily } from './maily';\nimport type { MailyConfig, RenderOptions } from './maily';\n\nexport async function render(\n  content: JSONContent,\n  config?: MailyConfig & RenderOptions\n): Promise<string> {\n  const { theme, preview, ...rest } = config || {};\n\n  const maily = new Maily(content);\n  maily.setPreviewText(preview);\n  maily.setTheme(theme || {});\n\n  return maily.render(rest);\n}\n"],"mappings":"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","names":["index_exports","__export","DEFAULT_BUTTON_PADDING_BOTTOM","DEFAULT_BUTTON_PADDING_LEFT","DEFAULT_BUTTON_PADDING_RIGHT","DEFAULT_BUTTON_PADDING_TOP","DEFAULT_COLUMNS_GAP","DEFAULT_COLUMNS_WIDTH","DEFAULT_COLUMN_BACKGROUND_COLOR","DEFAULT_COLUMN_BORDER_COLOR","DEFAULT_COLUMN_BORDER_RADIUS","DEFAULT_COLUMN_BORDER_WIDTH","DEFAULT_COLUMN_PADDING_BOTTOM","DEFAULT_COLUMN_PADDING_LEFT","DEFAULT_COLUMN_PADDING_RIGHT","DEFAULT_COLUMN_PADDING_TOP","DEFAULT_HTML_PROPS","DEFAULT_INLINE_IMAGE_HEIGHT","DEFAULT_INLINE_IMAGE_WIDTH","DEFAULT_META_TAGS","DEFAULT_SECTION_ALIGN","DEFAULT_SECTION_BACKGROUND_COLOR","DEFAULT_SECTION_BORDER_COLOR","DEFAULT_SECTION_BORDER_STYLE","DEFAULT_SECTION_BORDER_WIDTH","DEFAULT_SECTION_MARGIN_BOTTOM","DEFAULT_SECTION_MARGIN_LEFT","DEFAULT_SECTION_MARGIN_RIGHT","DEFAULT_SECTION_MARGIN_TOP","DEFAULT_SECTION_PADDING_BOTTOM","DEFAULT_SECTION_PADDING_LEFT","DEFAULT_SECTION_PADDING_RIGHT","DEFAULT_SECTION_PADDING_TOP","LINK_PROTOCOL_REGEX","Maily","render","__toCommonJS","import_react","import_components","import_render","toString","v","isObject","val","toString","objectKeys","obj","deepMerge","target","sources","source","isMergableObject","objectKeys","key","isMergableObject","item","isObject","VOID","generateKey","import_jsx_runtime","meta","index","self","meta_hash","has","t","process","props","_a","tagName","attributes","__objRest","__spreadValues","sortedMeta","acc","key","_key","import_node_html_parser","import_juice","import_jsx_runtime","antialiased","headings","logoSizes","DEFAULT_RENDER_OPTIONS","DEFAULT_THEME","CODE_FONT_FAMILY","DEFAULT_SECTION_BACKGROUND_COLOR","DEFAULT_SECTION_ALIGN","DEFAULT_SECTION_BORDER_WIDTH","DEFAULT_SECTION_BORDER_COLOR","DEFAULT_SECTION_BORDER_STYLE","DEFAULT_SECTION_MARGIN_TOP","DEFAULT_SECTION_MARGIN_RIGHT","DEFAULT_SECTION_MARGIN_BOTTOM","DEFAULT_SECTION_MARGIN_LEFT","DEFAULT_SECTION_PADDING_TOP","DEFAULT_SECTION_PADDING_RIGHT","DEFAULT_SECTION_PADDING_BOTTOM","DEFAULT_SECTION_PADDING_LEFT","DEFAULT_COLUMNS_WIDTH","DEFAULT_COLUMNS_GAP","DEFAULT_COLUMN_BACKGROUND_COLOR","DEFAULT_COLUMN_BORDER_RADIUS","DEFAULT_COLUMN_BORDER_WIDTH","DEFAULT_COLUMN_BORDER_COLOR","DEFAULT_COLUMN_PADDING_TOP","DEFAULT_COLUMN_PADDING_RIGHT","DEFAULT_COLUMN_PADDING_BOTTOM","DEFAULT_COLUMN_PADDING_LEFT","DEFAULT_INLINE_IMAGE_HEIGHT","DEFAULT_INLINE_IMAGE_WIDTH","LINK_PROTOCOL_REGEX","DEFAULT_META_TAGS","DEFAULT_HTML_PROPS","DEFAULT_BUTTON_PADDING_TOP","DEFAULT_BUTTON_PADDING_RIGHT","DEFAULT_BUTTON_PADDING_BOTTOM","DEFAULT_BUTTON_PADDING_LEFT","Maily","content","variable","fallback","preview","theme","deepMerge","formatter","value","values","link","key","pixel","shouldReplace","meta","props","__spreadValues","nodes","links","isValidLink","href","extractLinksFromNode","node","_a","originalLink","childNode","mark","_","err","__async","_b","noHtmlWrappingTags","options","__objRest","markup","reactEmailRenderAsync","jsxNodes","index","nodeOptions","component","generateKey","tags","htmlProps","__spreadProps","parent","prev","next","isNextSpacer","isPrevSpacer","isParentListItem","isLastSectionElement","isFirstSectionElement","isLastColumnElement","isFirstColumnElement","isFirstRepeatElement","isLastRepeatElement","isFirstShowElement","isLastShowElement","allNodes","n","type","text","marks","a","b","acc","_c","_d","_e","_f","_g","_h","attrs","textAlign","background","border","borderRadius","paddingTop","paddingRight","paddingBottom","paddingLeft","fontSize","lineHeight","color","display","shouldRemoveBottomMargin","marginBottom","antialiased","spaces","target","rel","linkWithoutProtocol","payloadValue","level","alignment","fontWeight","headings","formattedVariable","__","marginTop","marginRight","marginLeft","_text","isTextVariable","url","isUrlVariable","variant","buttonColor","textColor","width","radius","height","src","isSrcVariable","alt","title","size","externalLink","isExternalLinkVariable","imageWidth","widthStyle","imageHeight","heightStyle","mainImage","_i","_j","_k","_l","description","linkTitle","image","badgeText","subTitle","backgroundColor","align","borderWidth","borderColor","borderStyle","newNode","totalWidth","columnsWithWidth","c","autoWidthColumns","totalWidthUsed","remainingWidth","measuredWidth","columnCount","gap","isAutoWidthColumn","isFirstColumn","isMiddleColumn","isLastColumn","leftAndRightPadding","middleColumnPadding","verticalAlign","each","iterations","repeatCount","repeatedValues","i","showIfKey","inlineCssHtml","juice","doc","head","html","render","content","config","__async","_a","theme","preview","rest","__objRest","maily","Maily"]}